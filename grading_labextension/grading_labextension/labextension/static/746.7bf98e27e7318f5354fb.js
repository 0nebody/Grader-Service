(self.webpackChunkgrading=self.webpackChunkgrading||[]).push([[746],{3383:(e,t,s)=>{"use strict";s.r(t),s.d(t,{GlobalObjects:()=>G,default:()=>L});var n,i,a=s(6120),o=s(383),c=s(8751),l=s(6271),r=s(5331),m=s(5066),u=s(3529),h=s(6381);function g(e,t,s,n=null,i="http://128.130.202.214:8000/services/mock"){s.method=e,n&&(s.body=JSON.stringify(n));const a=m.ServerConnection.makeSettings();let o="";return null==i?(o=r.URLExt.join(a.baseUrl,"/grader.grading_labextension",t),console.log("Request "+e.toString()+" URL: "+o),(0,u.from)(m.ServerConnection.makeRequest(o,s,a)).pipe((0,h.w)((async e=>{let t=await e.text();if(t.length>0)try{t=JSON.parse(t)}catch(t){console.log("Not a JSON response body.",e)}return t})))):(o=i+t,s.headers={Authorization:"Bearer 123"},console.log("Request "+e.toString()+" URL: "+o),(0,u.from)(fetch(o,s)).pipe((0,h.w)((async e=>await e.json()))))}function d(){return g(n.GET,"/lectures",{})}function p(e){return g(n.GET,`/lectures/${e}/assignments`,{})}function b(e,t,s=!1,i=!1){let a=`/lectures/${e}/assignments/${t}`;return(s||i)&&(a+="?"+new URLSearchParams({"instructor-version":String(s),"metadata-only":String(i)})),g(n.GET,a,{})}(i=n||(n={})).GET="GET",i.POST="POST",i.PUT="PUT",i.DELETE="DELETE";var E=s(5669),N=s(9727),w=s(5709);function S(e,t,s=!1){let i=`/lectures/${e.id}/assignments/${t.id}/submissions`;return s&&(i+="?"+new URLSearchParams({latest:String(s)})),g(n.GET,i,{}).pipe((0,w.U)((e=>e[0])))}class I extends l.Component{constructor(e){super(e),this.iconSize=14,this.state={isOpen:!1,submissions:new Array},this.toggleOpen=()=>{console.log("toggle assignment header"),this.setState({isOpen:!this.state.isOpen})},this.assignment=e.assignment,this.index=e.index,this.lectureName=e.lectureName,this.lecture=e.lecture}componentDidMount(){S(this.lecture,{id:this.index}).subscribe((e=>{console.log(e),this.setState(this.state.submissions=e.submissions)}))}openFile(e){console.log("Opening file: "+e),G.commands.execute("docmanager:open",{path:e,options:{mode:"tab-after"}}).catch((e=>{(0,a.showErrorMessage)("Error Opening File",e)}))}openGrading(e,t){G.commands.execute("grading:open",{lectureID:e,assignmentID:t}).catch((e=>{(0,a.showErrorMessage)("Error Opening Submission View",e)}))}async openPreview(){let e=this.assignment.exercises.map((e=>e.name)),t=`${this.lecture.name}/${this.assignment.name}/`;if(e.length>1){let s=await a.InputDialog.getItem({title:"Choose an exercise to preview",items:e});if(null==s.value)return;t+=s.value}else t+=this.assignment.exercises[0].name;G.commands.execute("docmanager:open",{path:t,options:{mode:"split-right"}}).catch((e=>{(0,a.showErrorMessage)("Error Opening File",e)}))}async pushAssignment(){(await(0,a.showDialog)({title:"Push Assignment",body:`Do you want to push ${this.assignment.name}? This updates the state of the assignment on the server with your local state.`,buttons:[a.Dialog.cancelButton(),a.Dialog.okButton({label:"Push"})]})).button.accept}async pullAssignment(){(await(0,a.showDialog)({title:"Pull Assignment",body:`Do you want to pull ${this.assignment.name}? This updates your assignment with the state of the server.`,buttons:[a.Dialog.cancelButton(),a.Dialog.okButton({label:"Pull"})]})).button.accept}async releaseAssignment(){let e=await(0,a.showDialog)({title:"Release Assignment",body:`Do you want to release ${this.assignment.name} for all students? This can NOT be undone!`,buttons:[a.Dialog.cancelButton(),a.Dialog.warnButton({label:"Release"})]});e.button.accept&&(e=await(0,a.showDialog)({title:"Confirmation",body:`Are you sure you want to release ${this.assignment.name}?`,buttons:[a.Dialog.cancelButton(),a.Dialog.warnButton({label:"Release"})]}),e.button.accept)}render(){return l.createElement("li",{key:this.index},l.createElement("div",{className:"assignment"},l.createElement("div",{className:"assignment-header"},l.createElement("span",{onClick:this.toggleOpen},l.createElement(N.Icon,{icon:"chevron-right",iconSize:this.iconSize,className:"collapse-icon-small "+(this.state.isOpen?"collapse-icon-small-open":"")}),l.createElement(N.Icon,{icon:"inbox",iconSize:this.iconSize,className:"flavor-icon"}),this.assignment.name),l.createElement("span",{className:"button-list"},l.createElement(N.Button,{icon:"edit",outlined:!0,className:"assignment-button"},"Edit"),l.createElement(N.Button,{icon:"search",outlined:!0,className:"assignment-button",onClick:()=>this.openPreview()},"Preview"),l.createElement(N.Button,{icon:"git-push",intent:"success",outlined:!0,className:"assignment-button",onClick:()=>this.pushAssignment()},"Push"),l.createElement(N.Button,{icon:"git-pull",intent:"primary",outlined:!0,className:"assignment-button",onClick:()=>this.pullAssignment()}," Pull"),l.createElement(N.Button,{icon:"cloud-upload",outlined:!0,className:"assignment-button",disabled:"created"==this.assignment.status,onClick:()=>this.releaseAssignment()},"Release"),l.createElement(N.Tag,{className:"assignment-tag",icon:"arrow-top-right",interactive:!0,onClick:()=>this.openGrading(this.lecture.id,this.assignment.id)},this.state.submissions.length," ","Submission"+(this.state.submissions.length>1?"s":"")))),l.createElement(N.Collapse,{isOpen:this.state.isOpen},l.createElement("div",{className:"assignment-content"},this.assignment.exercises.map(((e,t)=>l.createElement("div",{className:"list-element",onClick:()=>this.openFile(`${this.lectureName}/${this.assignment.name}/${e.name}`)},l.createElement(N.Icon,{icon:"edit",iconSize:this.iconSize,className:"flavor-icon"}),e.name))),this.assignment.files.map(((e,t)=>l.createElement("div",{className:"list-element",onClick:()=>this.openFile(`${this.lectureName}/${this.assignment.name}/${e.name}`)},l.createElement(N.Icon,{icon:"document",iconSize:this.iconSize,className:"flavor-icon"}),e.name))),l.createElement("span",{className:"add-buttons"},l.createElement(N.Button,{icon:"add",outlined:!0,className:"assignment-button"},"Add File"),l.createElement(N.Button,{icon:"upload",outlined:!0,className:"assignment-button"},"Upload File"))))))}}var D=s(5992),O=s(4936);class f extends l.Component{constructor(e){super(e),this.state={isOpen:!1,assignments:new Array},this.toggleOpen=()=>{this.setState({isOpen:!this.state.isOpen})},this.title=e.title,this.lecture=e.lecture,this.state.isOpen=e.open||!1,this.getAssignments=this.getAssignments.bind(this)}async createAssignment(){try{let s;O.m.getText({title:"Input assignment name"}).then((e=>{s=e})),e=this.lecture.id,t=s,g(n.POST,`/lectures/${e}/assignments`,{},t)}catch(e){(0,D.UW)("Error Creating Assignment",e)}var e,t}componentDidMount(){this.getAssignments()}getAssignments(){p(this.lecture.id).subscribe((e=>{console.log(e),this.setState(this.state.assignments=e)}))}render(){return l.createElement("div",{className:"CourseManageAssignmentsComponent"},l.createElement("div",{onClick:this.toggleOpen,className:"collapse-header"},l.createElement(N.Icon,{icon:"learning",className:"flavor-icon"}),l.createElement(N.Icon,{icon:"chevron-down",className:"collapse-icon "+(this.state.isOpen?"collapse-icon-open":"")}),this.title),l.createElement(E.Collapse,{isOpen:this.state.isOpen,className:"collapse-body",keepChildrenMounted:!0},l.createElement("ul",null,this.state.assignments.map(((e,t)=>l.createElement(I,{index:t,lectureName:this.title,lecture:this.lecture,assignment:e})))),l.createElement("div",{className:"assignment-create"},l.createElement(N.Button,{icon:"add",outlined:!0,onClick:this.createAssignment,className:"assignment-button"},"Create new Assignment"))))}}class y extends l.Component{constructor(e){super(e),this.state={lectures:new Array}}componentDidMount(){d().subscribe((e=>{console.log(e),this.setState(this.state.lectures=e)}))}render(){return l.createElement("div",{className:"course-list"},this.state.lectures.map(((e,t)=>l.createElement(f,{lecture:e,title:e.name,open:0==t}))))}}class C extends a.ReactWidget{constructor(e={}){super(),this.id=e.id,this.addClass("GradingWidget")}render(){return l.createElement(y,null)}}var A=s(4125);class v extends l.Component{constructor(e){super(e),this.iconSize=14,this.state={filesOpen:!1,submissionsOpen:!0,submissions:new Array},this.toggleOpen=e=>{"files"==e?this.setState({filesOpen:!this.state.filesOpen}):"submissions"==e&&this.setState({submissionsOpen:!this.state.submissionsOpen})},this.assignment=e.assignment,this.index=e.index,this.lecture=e.lecture,this.toggleOpen=this.toggleOpen.bind(this),this.openFile=this.openFile.bind(this),this.fetchAssignment=this.fetchAssignment.bind(this),this.submitAssignment=this.submitAssignment.bind(this),this.getSubmissions=this.getSubmissions.bind(this)}componentDidMount(){this.getSubmissions()}async openFile(e){if("released"==this.assignment.status){if(!(await(0,a.showDialog)({title:"Assignment not fetched yet!",body:"Before working on assignments you need to fetch them! Do you want to fetch the assignment now?",buttons:[a.Dialog.cancelButton(),a.Dialog.okButton({label:"Fetch Now"})]})).button.accept)return;await this.fetchAssignment()}console.log("Opening file: "+e),G.commands.execute("docmanager:open",{path:e,options:{mode:"tab-after"}}).catch((e=>{(0,a.showErrorMessage)("Error Opening File",e)}))}async fetchAssignment(){try{(await(0,a.showDialog)({title:"Fetch Assignment",body:`Do you want to fetch ${this.assignment.name}?`,buttons:[a.Dialog.cancelButton(),a.Dialog.okButton({label:"Fetch"})]})).button.accept&&(this.assignment=await b(this.lecture.id,this.assignment.id).toPromise())}catch(e){(0,a.showErrorMessage)("Error Fetching Assignment",e)}}async submitAssignment(){try{(await(0,a.showDialog)({title:"Submit Assignment",body:`Do you want to submit ${this.assignment.name}? You can always re-submit the assignment before the due date.`,buttons:[a.Dialog.cancelButton(),a.Dialog.okButton({label:"Submit"})]})).button.accept&&(await(e=this.lecture,t=this.assignment,g(n.POST,`/lectures/${e.id}/assignments/${t.id}/submissions`,{},{})).toPromise(),await this.getSubmissions())}catch(e){(0,a.showErrorMessage)("Error Submitting Assignment",e)}var e,t}getSubmissions(){S(this.lecture,this.assignment).subscribe((e=>this.setState({submissions:e.submissions})),(e=>(0,a.showErrorMessage)("Error Loading Submissions",e)))}render(){return l.createElement("li",{key:this.index},l.createElement("div",{className:"assignment"},l.createElement("div",{className:"assignment-header"},l.createElement(N.Icon,{icon:A.IconNames.INBOX,iconSize:this.iconSize,className:"flavor-icon"}),this.assignment.name,l.createElement("span",{className:"button-list"},l.createElement(N.Button,{className:"assignment-button",onClick:this.fetchAssignment,icon:A.IconNames.CLOUD_DOWNLOAD,disabled:"released"!=this.assignment.status,outlined:!0,intent:N.Intent.PRIMARY},"Fetch"),l.createElement(N.Button,{className:"assignment-button",onClick:this.submitAssignment,icon:A.IconNames.SEND_MESSAGE,disabled:"fetched"!=this.assignment.status,outlined:!0,intent:N.Intent.SUCCESS},"Submit"))),l.createElement("div",{onClick:()=>this.toggleOpen("files"),className:"assignment-title"},l.createElement(N.Icon,{icon:A.IconNames.CHEVRON_RIGHT,iconSize:this.iconSize,className:"collapse-icon-small "+(this.state.filesOpen?"collapse-icon-small-open":"")}),l.createElement(N.Icon,{icon:A.IconNames.FOLDER_CLOSE,iconSize:this.iconSize,className:"flavor-icon"}),"Exercises and Files"),l.createElement(N.Collapse,{isOpen:this.state.filesOpen},l.createElement("div",{className:"assignment-content"},this.assignment.exercises.map(((e,t)=>l.createElement("div",{className:"list-element",onClick:()=>this.openFile(`${this.lecture.name}/${this.assignment.name}/${e.name}`)},l.createElement(N.Icon,{icon:A.IconNames.EDIT,iconSize:this.iconSize,className:"flavor-icon"}),e.name))),this.assignment.files.map(((e,t)=>l.createElement("div",{className:"list-element",onClick:()=>this.openFile(`${this.lecture.name}/${this.assignment.name}/${e.name}`)},l.createElement(N.Icon,{icon:A.IconNames.DOCUMENT,iconSize:this.iconSize,className:"flavor-icon"}),e.name))))),l.createElement("div",{onClick:()=>this.toggleOpen("submissions"),className:"assignment-title"},l.createElement(N.Icon,{icon:A.IconNames.CHEVRON_RIGHT,iconSize:this.iconSize,className:"collapse-icon-small "+(this.state.submissionsOpen?"collapse-icon-small-open":"")}),l.createElement(N.Icon,{icon:A.IconNames.TICK_CIRCLE,iconSize:this.iconSize,className:"flavor-icon"}),"Submissions"),l.createElement(N.Collapse,{isOpen:this.state.submissionsOpen},l.createElement("div",{className:"assignment-content"},this.state.submissions.map(((e,t)=>l.createElement("div",{className:"submission-element"},l.createElement(N.Icon,{icon:A.IconNames.FORM,iconSize:this.iconSize,className:"flavor-icon"}),e.submitted_at,"not_graded"!=e.status?l.createElement(N.Button,{className:"assignment-button",icon:A.IconNames.CLOUD_DOWNLOAD,active:!0,outlined:!0,intent:N.Intent.PRIMARY,small:!0},"Fetch Feedback"):null)))))))}}class x extends l.Component{constructor(e){super(e),this.state={isOpen:!1,assignments:new Array},this.toggleOpen=()=>{this.setState({isOpen:!this.state.isOpen})},this.lecture=e.lecture,this.state.isOpen=e.open||!1}componentDidMount(){p(this.lecture.id).subscribe((e=>{this.setState(this.state.assignments=e)}))}render(){return l.createElement("div",{className:"AssignmentsComponent"},l.createElement("div",{onClick:this.toggleOpen,className:"collapse-header"},l.createElement(N.Icon,{icon:A.IconNames.LEARNING,className:"flavor-icon"}),this.lecture.name,l.createElement(N.Icon,{iconSize:N.Icon.SIZE_LARGE,icon:A.IconNames.CHEVRON_DOWN,className:"collapse-icon "+(this.state.isOpen?"collapse-icon-open":"")})),l.createElement(E.Collapse,{isOpen:this.state.isOpen,className:"collapse-body",transitionDuration:300,keepChildrenMounted:!0},l.createElement("ul",null,this.state.assignments.map(((e,t)=>l.createElement(v,{index:t,lecture:this.lecture,assignment:e}))))))}}class k extends l.Component{constructor(e){super(e),this.state={lectures:new Array}}componentDidMount(){d().subscribe((e=>this.setState(this.state.lectures=e)),(e=>(0,a.showErrorMessage)("Error Fetching Lectures",e)))}render(){return l.createElement("div",{className:"course-list"},this.state.lectures.map(((e,t)=>l.createElement(x,{lecture:e,open:0==t}))))}}class B extends a.ReactWidget{constructor(e={}){super(),this.id=e.id,this.addClass("AssignmentListWidget")}render(){return l.createElement(k,null)}}var R,$,z,M=s(5208),T=s(6753);class P extends l.Component{constructor(e){super(e),this.state={assignment:{},lecture:{},submissions:new Array,isOpen:!0,rows:new Array},this.lectureID=e.lectureID,this.assignmentID=e.assignmentID,this.title=e.title,this.columns=[{field:"id",headerName:"Id",width:100},{field:"user",headerName:"User",width:130},{field:"date",headerName:"Date",width:200},{field:"",headerName:"",width:150,disableClickEventBubbling:!0,disableColumnMenu:!0,renderCell:e=>l.createElement(T.zx,{icon:"highlight",outlined:!0},"Autograde")},{field:"score",headerName:"Score",width:130}]}async componentDidMount(){let e=await b(this.lectureID,this.assignmentID,!1,!0).toPromise(),t=await(s=this.lectureID,g(n.GET,`/lectures/${s}`,{})).toPromise();var s;this.title.label="Grading: "+e.name,this.setState({assignment:e,lecture:t}),function(e,t,s=!1,i=!0){let a=`/lectures/${e.id}/assignments/${t.id}/submissions`;return(s||i)&&(a+="?"+new URLSearchParams({"instructor-version":String(i),latest:String(s)})),g(n.GET,a,{})}(t,e,!1).subscribe((e=>{console.log(e),this.setState(this.state.submissions=e),this.setState(this.state.rows=this.generateRows()),console.log("rows:"),console.log(this.state.rows)}))}generateRows(){let e=new Array;return this.state.submissions.forEach((t=>{e.push({id:t.user.id,user:t.user.name,date:t.submissions[0].submitted_at})})),e}render(){return l.createElement("div",{style:{height:"100%",display:"flex",flexDirection:"column"}},l.createElement(M.DataGrid,{rows:this.state.rows,columns:this.columns,checkboxSelection:!0,hideFooterPagination:!0}),l.createElement(T.zx,{icon:"highlight",color:"primary",outlined:!0,style:{alignSelf:"flex-end",marginRight:"20px",marginBottom:"20px"}},"Autograde selected"))}}class F extends a.ReactWidget{constructor(e){super(),this.lectureID=e.lectureID,this.assignmentID=e.assignmentID,this.addClass("GradingWidget")}render(){return l.createElement(P,{lectureID:this.lectureID,assignmentID:this.assignmentID,title:this.title})}}!function(e){e.create="assignments:create",e.open="assignments:open"}(R||(R={})),function(e){e.create="coursemanage:create",e.open="coursemanage:open"}($||($={})),function(e){e.create="grading:create",e.open="grading:open"}(z||(z={}));class G{}const L={id:"coursemanage:plugin",autoStart:!0,requires:[a.ICommandPalette,o.ILauncher,c.INotebookTools],activate:(e,t,s,n)=>{console.log("JupyterLab extension grading is activated!"),console.log("JupyterFrontEnd:",e),console.log("ICommandPalette:",t),G.commands=e.commands;let i=$.create;e.commands.addCommand(i,{execute:()=>{const e=new C,t=new a.MainAreaWidget({content:e});return t.id="coursemanage-jupyterlab",t.title.label="Course Management",t.title.closable=!0,t}}),i=$.open,e.commands.addCommand(i,{label:"Course Management",execute:async()=>{const t=await e.commands.execute($.create);t.isAttached||e.shell.add(t,"main"),e.shell.activateById(t.id)},icon:E.checkIcon}),console.log("Add course management launcher"),s.add({command:i,category:"Assignments",rank:0}),i=R.create,e.commands.addCommand(i,{execute:()=>{const e=new B,t=new a.MainAreaWidget({content:e});return t.id="assignments-jupyterlab",t.title.label="Assignments",t.title.closable=!0,t}}),i=R.open,e.commands.addCommand(i,{label:"Assignments",execute:async()=>{const t=await e.commands.execute(R.create);t.isAttached||e.shell.add(t,"main"),e.shell.activateById(t.id)},icon:E.editIcon}),console.log("Add assignment launcher"),s.add({command:i,category:"Assignments",rank:0}),i=z.create,e.commands.addCommand(i,{execute:e=>{const t=void 0===e.lectureID?null:e.lectureID,s=void 0===e.assignmentID?null:e.assignmentID,n=new F({lectureID:t,assignmentID:s}),i=new a.MainAreaWidget({content:n});return i.id="grading-jupyterlab",i.title.label="Grading",i.title.closable=!0,i}}),i=z.open,e.commands.addCommand(i,{label:"Grading",execute:async t=>{const s=await e.commands.execute(z.create,t);s.isAttached||e.shell.add(s,"main"),e.shell.activateById(s.id)},icon:E.editIcon})}}}}]);