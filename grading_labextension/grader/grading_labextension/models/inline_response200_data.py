# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from grader.grading_labextension.models.base_model_ import Model
from grader.grading_labextension.models.inline_response200_submissions import InlineResponse200Submissions
from grader.grading_labextension.models.user import User
from grader.grading_labextension import util

from grader.grading_labextension.models.inline_response200_submissions import InlineResponse200Submissions  # noqa: E501
from grader.grading_labextension.models.user import User  # noqa: E501

class InlineResponse200Data(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, student=None, submissions=None):  # noqa: E501
        """InlineResponse200Data - a model defined in OpenAPI

        :param student: The student of this InlineResponse200Data.  # noqa: E501
        :type student: User
        :param submissions: The submissions of this InlineResponse200Data.  # noqa: E501
        :type submissions: List[InlineResponse200Submissions]
        """
        self.openapi_types = {
            'student': User,
            'submissions': List[InlineResponse200Submissions]
        }

        self.attribute_map = {
            'student': 'student',
            'submissions': 'submissions'
        }

        self._student = student
        self._submissions = submissions

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200Data':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_data of this InlineResponse200Data.  # noqa: E501
        :rtype: InlineResponse200Data
        """
        return util.deserialize_model(dikt, cls)

    @property
    def student(self):
        """Gets the student of this InlineResponse200Data.


        :return: The student of this InlineResponse200Data.
        :rtype: User
        """
        return self._student

    @student.setter
    def student(self, student):
        """Sets the student of this InlineResponse200Data.


        :param student: The student of this InlineResponse200Data.
        :type student: User
        """

        self._student = student

    @property
    def submissions(self):
        """Gets the submissions of this InlineResponse200Data.


        :return: The submissions of this InlineResponse200Data.
        :rtype: List[InlineResponse200Submissions]
        """
        return self._submissions

    @submissions.setter
    def submissions(self, submissions):
        """Sets the submissions of this InlineResponse200Data.


        :param submissions: The submissions of this InlineResponse200Data.
        :type submissions: List[InlineResponse200Submissions]
        """

        self._submissions = submissions
