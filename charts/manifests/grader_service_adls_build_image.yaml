apiVersion: v1
kind: ServiceAccount
metadata:
  name: grader-service

---

apiVersion: v1
data:
  hub.services.grader.apiToken: 7e272a9df62444de9d2d111b5ff6e70f
kind: Secret
metadata:
  name: hub
type: Opaque

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grader-service
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10G
  storageClassName: csi-cinder-sc-delete

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grader-service
data:
  grader_service_config.py: |
    from grader_service.autograding.kube.kube_grader import KubeAutogradeExecutor
    c.RequestHandlerConfig.autograde_executor_class = KubeAutogradeExecutor
    c.KubeAutogradeExecutor.kube_context = None
    c.KubeAutogradeExecutor.base_input_path = "/var/lib/grader-service/convert_in"
    c.KubeAutogradeExecutor.base_output_path = "/var/lib/grader-service/convert_out"
    c.KubeAutogradeExecutor.default_image_name = lambda l, a: "mbwali/grader-service:latest"
    c.KubeAutogradeExecutor.volume_mounts = [{"name": "data", "mountPath": "/var/lib/grader-service"}]
    c.KubeAutogradeExecutor.volumes = [{"name": "data", "persistentVolumeClaim": {"claimName": "grader-service"}}]

  .gitconfig: |
    [user]
      name = grader-service
      email = grader-service@mail.com
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grader-service
  labels:
    app: jupyterhub
    component: grader-service
    release: jupyterhub
spec:
  selector:
    matchLabels:
      app: jupyterhub
      component: grader-service
      release: jupyterhub
  replicas: 1
  template:
    metadata:
      labels:
        app: jupyterhub
        component: grader-service
        release: jupyterhub
        hub.jupyter.org/network-access-hub: "true"
        hub.jupyter.org/network-access-proxy-http: "true"
    spec:
      serviceAccount: grader-service
      serviceAccountName: grader-service
      containers:
      - name: grader-service
        image: mbwali/grader-service:latest
        imagePullPolicy: Always
        # command: [ "sh", "-c", "sleep 140s" ] # for debug
        ports:
        - containerPort: 4010
          name: service-port
          protocol: TCP
        volumeMounts:
          - name: data
            mountPath: /var/lib/grader-service
          - name: config
            mountPath: /var/lib/grader-service/grader_service_config.py
            subPath: grader_service_config.py
          - name: config
            mountPath: /var/lib/grader-service/.gitconfig
            subPath: .gitconfig
        env:
          - name: JUPYTERHUB_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: hub
                key: hub.services.grader.apiToken
          - name: JUPYTERHUB_API_URL
            value: 'http://hub:8081/hub/api'
          - name: GRADER_SERVICE_PORT
            value: "4010"
          - name: JUPYTERHUB_BASE_URL
            value: '/'
          - name: JUPYTERHUB_SERVICE_NAME
            value: 'grader'
          - name: GRADER_SERVICE_DIRECTORY
            value: '/var/lib/grader-service'
          - name: GRADER_DB_DIALECT
            value: 'sqlite'
          - name: GRADER_DB_HOST
            value: '/var/lib/grader-service/grader.db'

      initContainers:
      - name: volume-permissions
        image: busybox
        command: ["/bin/sh","-c"]
        args: ["chown -R 1000:1000 /var/lib/grader-service;"]
        volumeMounts:
          - name: data
            mountPath: /var/lib/grader-service
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: grader-service
            readOnly: false
        - name: config
          configMap:
            defaultMode: 444
            name: grader-service
---
apiVersion: v1
kind: Service
metadata:
  name: grader-service
  labels:
    app: jupyterhub
    component: grader-service
    release: jupyterhub
spec:
  ports:
  - port: 4010
    protocol: TCP
  selector:
    app: jupyterhub
    component: grader-service
    release: jupyterhub
