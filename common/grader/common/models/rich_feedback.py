# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from common.models.base_model_ import Model
from common import util


class RichFeedback(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, submission_id=None, path=None, payload=None):  # noqa: E501
        """RichFeedback - a model defined in OpenAPI

        :param id: The id of this RichFeedback.  # noqa: E501
        :type id: int
        :param submission_id: The submission_id of this RichFeedback.  # noqa: E501
        :type submission_id: int
        :param path: The path of this RichFeedback.  # noqa: E501
        :type path: str
        :param payload: The payload of this RichFeedback.  # noqa: E501
        :type payload: str
        """
        self.openapi_types = {
            'id': int,
            'submission_id': int,
            'path': str,
            'payload': str
        }

        self.attribute_map = {
            'id': 'id',
            'submission_id': 'submission_id',
            'path': 'path',
            'payload': 'payload'
        }

        self._id = id
        self._submission_id = submission_id
        self._path = path
        self._payload = payload

    @classmethod
    def from_dict(cls, dikt) -> 'RichFeedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RichFeedback of this RichFeedback.  # noqa: E501
        :rtype: RichFeedback
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this RichFeedback.


        :return: The id of this RichFeedback.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RichFeedback.


        :param id: The id of this RichFeedback.
        :type id: int
        """

        self._id = id

    @property
    def submission_id(self):
        """Gets the submission_id of this RichFeedback.


        :return: The submission_id of this RichFeedback.
        :rtype: int
        """
        return self._submission_id

    @submission_id.setter
    def submission_id(self, submission_id):
        """Sets the submission_id of this RichFeedback.


        :param submission_id: The submission_id of this RichFeedback.
        :type submission_id: int
        """

        self._submission_id = submission_id

    @property
    def path(self):
        """Gets the path of this RichFeedback.


        :return: The path of this RichFeedback.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this RichFeedback.


        :param path: The path of this RichFeedback.
        :type path: str
        """

        self._path = path

    @property
    def payload(self):
        """Gets the payload of this RichFeedback.


        :return: The payload of this RichFeedback.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this RichFeedback.


        :param payload: The payload of this RichFeedback.
        :type payload: str
        """

        self._payload = payload
