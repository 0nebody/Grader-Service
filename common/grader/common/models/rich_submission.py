# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from grader.common.models.base_model_ import Model
from grader.common import util


class RichSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, submitted_at=None, status=None, payload=None):  # noqa: E501
        """RichSubmission - a model defined in OpenAPI

        :param id: The id of this RichSubmission.  # noqa: E501
        :type id: int
        :param submitted_at: The submitted_at of this RichSubmission.  # noqa: E501
        :type submitted_at: datetime
        :param status: The status of this RichSubmission.  # noqa: E501
        :type status: str
        :param payload: The payload of this RichSubmission.  # noqa: E501
        :type payload: str
        """
        self.openapi_types = {
            'id': int,
            'submitted_at': datetime,
            'status': str,
            'payload': str
        }

        self.attribute_map = {
            'id': 'id',
            'submitted_at': 'submitted_at',
            'status': 'status',
            'payload': 'payload'
        }

        self._id = id
        self._submitted_at = submitted_at
        self._status = status
        self._payload = payload

    @classmethod
    def from_dict(cls, dikt) -> 'RichSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RichSubmission of this RichSubmission.  # noqa: E501
        :rtype: RichSubmission
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this RichSubmission.


        :return: The id of this RichSubmission.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RichSubmission.


        :param id: The id of this RichSubmission.
        :type id: int
        """

        self._id = id

    @property
    def submitted_at(self):
        """Gets the submitted_at of this RichSubmission.


        :return: The submitted_at of this RichSubmission.
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this RichSubmission.


        :param submitted_at: The submitted_at of this RichSubmission.
        :type submitted_at: datetime
        """

        self._submitted_at = submitted_at

    @property
    def status(self):
        """Gets the status of this RichSubmission.


        :return: The status of this RichSubmission.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RichSubmission.


        :param status: The status of this RichSubmission.
        :type status: str
        """
        allowed_values = ["not_graded", "automatically_graded", "manually_graded"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def payload(self):
        """Gets the payload of this RichSubmission.


        :return: The payload of this RichSubmission.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this RichSubmission.


        :param payload: The payload of this RichSubmission.
        :type payload: str
        """

        self._payload = payload
