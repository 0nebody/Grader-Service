openapi: 3.0.2
info:
  title: Grader Server Extension API
  version: "0.1"
servers:
- url: https://api.server.test/v1
tags:
- name: Lectures
  description: Available lectures
- name: Assignments
  description: Assignments of a lecture
- name: Submissions
  description: View submissions of an assignment
- name: Grading
  description: Manage the grading and feedback of assignments (Instructor)
paths:
  /lectures:
    get:
      tags:
      - Lectures
      summary: Return all lectures that are available to the user
      operationId: lectures_get
      parameters:
      - name: semester
        in: query
        description: The semester for which to fetch lectures
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: SS21
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lecture'
                x-content-type: application/json
        "403":
          description: Unautorized
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.lectures_controller
    post:
      tags:
      - Lectures
      summary: Create new lecture
      operationId: lectures_post
      requestBody:
        description: The parameters of the lecture that is created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecture'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecture'
        "403":
          description: Unautorized
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
      x-openapi-router-controller: swagger_server.controllers.lectures_controller
  /lectures/{lect_id}:
    get:
      tags:
      - Lectures
      summary: Return the lecture with specified id
      operationId: lectures_lect_id_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecture'
        "403":
          description: Unautorized
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.lectures_controller
    put:
      tags:
      - Lectures
      summary: Update an existing lecture
      operationId: lectures_lect_id_put
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      requestBody:
        description: The parameters of the lecture that should be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecture'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecture'
        "403":
          description: Unautorized
        "404":
          description: Lecture id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.lectures_controller
    delete:
      tags:
      - Lectures
      summary: Delete an existing lecture
      operationId: lectures_lect_id_delete
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecture'
        "403":
          description: Unautorized
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.lectures_controller
  /lectures/{lect_id}/assignments:
    get:
      tags:
      - Assignments
      summary: Return the assignments of a specific lecture
      operationId: lectures_lect_id_assignments_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'
                x-content-type: application/json
        "403":
          description: Unautorized
        "404":
          description: Lecture id not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.assignments_controller
    post:
      tags:
      - Assignments
      summary: Request creation of an assignment
      operationId: lectures_lect_id_assignments_post
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      requestBody:
        description: The initial state of an assignment. Every field will be empty
          except `due_date` and `name`.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.assignments_controller
  /lectures/{lect_id}/assignments/{a_id}:
    get:
      tags:
      - Assignments
      summary: Request the assignment to be fetched
      operationId: lectures_lect_id_assignments_a_id_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: instuctor_version
        in: query
        description: Fetch the instructor version of the assignment
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: metadata_only
        in: query
        description: Only return the assignment information and don't fetch it
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: include_submissions
        in: query
        description: Include past submissions of the assignment
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.assignments_controller
    put:
      tags:
      - Assignments
      summary: Update an existing assignment (also handles release)
      operationId: lectures_lect_id_assignments_a_id_put
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      requestBody:
        description: The parameters of the assignment that should be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.assignments_controller
    delete:
      tags:
      - Assignments
      summary: Delete an existing assignment
      operationId: lectures_lect_id_assignments_a_id_delete
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.assignments_controller
  /lectures/{lect_id}/assignments/{a_id}/submissions:
    get:
      tags:
      - Submissions
      summary: Return the submissions of an assignment
      operationId: lectures_lect_id_assignments_a_id_submissions_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: latest
        in: query
        description: Only return the latest submission
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.submissions_controller
    post:
      tags:
      - Submissions
      summary: Request assignment to be submitted
      operationId: lectures_lect_id_assignments_a_id_submissions_post
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.submissions_controller
  /lectures/{lect_id}/assignments/{a_id}/feedback:
    get:
      tags:
      - Submissions
      summary: Return the feedback of an assignment
      operationId: lectures_lect_id_assignments_a_id_feedback_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feedback'
                x-content-type: application/json
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.submissions_controller
  /lectures/{lect_id}/assignments/{a_id}/grading:
    get:
      tags:
      - Grading
      summary: List student submissions of a lecture
      operationId: lectures_lect_id_assignments_a_id_grading_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: metadata_only
        in: query
        description: Only return the metadata information of the submissions
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: latest
        in: query
        description: Only return the latest submission of each student
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: student_id
        in: query
        description: Specify the student id
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "403":
          description: Unautorized
        "404":
          description: Lecture id or assignment id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.grading_controller
  /lectures/{lect_id}/assignments/{a_id}/grading/{student_id}/auto:
    post:
      tags:
      - Grading
      summary: Request the latest submission to be autograded
      operationId: lectures_lect_id_assignments_a_id_grading_student_id_auto_post
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: student_id
        in: path
        description: ID of the student that is enroled in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: "12345678"
      - name: submission_id
        in: query
        description: Specify the submission that should be autograded instead of latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'
                x-content-type: application/json
        "403":
          description: Unautorized
        "404":
          description: "Lecture id, assignment id, student id or submission id not\
            \ found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.grading_controller
  /lectures/{lect_id}/assignments/{a_id}/grading/{student_id}/manual:
    get:
      tags:
      - Grading
      summary: Return the manual feedback of a graded assignment
      operationId: lectures_lect_id_assignments_a_id_grading_student_id_manual_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: student_id
        in: path
        description: ID of the student that is enroled in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: "12345678"
      - name: submission_id
        in: query
        description: Specify the the submission that should be manually graded instead
          of latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualGradingContent'
        "403":
          description: Unautorized
        "404":
          description: "Lecture id, assignment id, student id or submission id not\
            \ found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.grading_controller
    put:
      tags:
      - Grading
      summary: Update the manual feedback for an assignment
      operationId: lectures_lect_id_assignments_a_id_grading_student_id_manual_put
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: student_id
        in: path
        description: ID of the student that is enroled in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: "12345678"
      - name: submission_id
        in: query
        description: Specify the the submission that should be manually graded instead
          of latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2
      requestBody:
        description: The content of the manual grading to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualGradingContent'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualGradingContent'
        "403":
          description: Unautorized
        "404":
          description: "Lecture id, assignment id, student id or submission id not\
            \ found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.grading_controller
    post:
      tags:
      - Grading
      summary: Create new manual feedback for an assignment
      operationId: lectures_lect_id_assignments_a_id_grading_student_id_manual_post
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: student_id
        in: path
        description: ID of the student that is enroled in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: "12345678"
      - name: submission_id
        in: query
        description: Specify the the submission that should be manually graded instead
          of latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2
      requestBody:
        description: The content of the manual grading.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualGradingContent'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualGradingContent'
        "403":
          description: Unautorized
        "404":
          description: "Lecture id, assignment id, student id or submission id not\
            \ found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.grading_controller
    delete:
      tags:
      - Grading
      summary: Delete the manual feedback for an assignment
      operationId: lectures_lect_id_assignments_a_id_grading_student_id_manual_delete
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: student_id
        in: path
        description: ID of the student that is enroled in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: "12345678"
      - name: submission_id
        in: query
        description: Specify the the submission that should be manually graded instead
          of latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
        "403":
          description: Unautorized
        "404":
          description: "Lecture id, assignment id, student id or submission id not\
            \ found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
      x-openapi-router-controller: swagger_server.controllers.grading_controller
  /lectures/{lect_id}/assignments/{a_id}/grading/{student_id}/score:
    get:
      tags:
      - Grading
      summary: Return the score of an assignment
      operationId: lectures_lect_id_assignments_a_id_grading_student_id_score_get
      parameters:
      - name: lect_id
        in: path
        description: ID of the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: a_id
        in: path
        description: ID of the assignment in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 2
      - name: student_id
        in: path
        description: ID of the student that is enroled in the lecture
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: "12345678"
      - name: submission_id
        in: query
        description: Specify the the submission that should be returned instead of
          latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        example: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradingResult'
        "403":
          description: Unautorized
        "404":
          description: "Lecture id, assignment id, student id or submission id not\
            \ found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - hub_auth:
        - instructor
        - tutor
        - student
      x-openapi-router-controller: swagger_server.controllers.grading_controller
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "12345678"
        name:
          type: string
          example: Baz Bar
      example:
        name: Baz Bar
        id: "12345678"
    Lecture:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Informationsvisualisierung
        code:
          type: string
          example: ivs21
        complete:
          type: boolean
          default: false
        semester:
          type: string
          example: SS21
      example:
        code: ivs21
        name: Informationsvisualisierung
        semester: SS21
        id: 0
        complete: false
    Assignment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: assignment_1
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Exercise'
        files:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentFile'
        due_date:
          type: string
          format: date-time
          example: 2021-07-21T23:55:00Z
        path:
          type: string
          example: ~/assignment_1/
        status:
          type: string
          enum:
          - created
          - released
          - fetched
          - submitted
          - complete
      example:
        path: ~/assignment_1/
        exercises:
        - a_id: 1
          name: exercise_1.ipynb
          ex_type: nbgrader
          id: 6
          points: 5.962134
        - a_id: 1
          name: exercise_1.ipynb
          ex_type: nbgrader
          id: 6
          points: 5.962134
        name: assignment_1
        due_date: 2021-07-21T23:55:00Z
        files:
        - name: dataset.csv
        - name: dataset.csv
        id: 0
        status: created
    Exercise:
      type: object
      properties:
        id:
          type: integer
          format: int64
        a_id:
          type: integer
          format: int64
        name:
          type: string
          example: exercise_1.ipynb
        ex_type:
          type: string
          enum:
          - nbgrader
        points:
          type: number
          format: float
      example:
        a_id: 1
        name: exercise_1.ipynb
        ex_type: nbgrader
        id: 6
        points: 5.962134
    Submission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        submitted_at:
          type: string
          format: date-time
          example: 2021-07-21T11:53:07Z
        status:
          type: string
          enum:
          - not_graded
          - automatically_graded
          - manually_graded
      example:
        submitted_at: 2021-07-21T11:53:07Z
        id: 0
        status: not_graded
    Feedback:
      type: object
      properties:
        id:
          type: integer
          format: int64
        submission_id:
          type: integer
          format: int64
        path:
          type: string
          example: ~/assignment_1/feedback/...
      example:
        submission_id: 6
        path: ~/assignment_1/feedback/...
        id: 0
    ValidationResult:
      type: object
      properties:
        status:
          type: string
          enum:
          - passed
          - failed
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationResult_validation_errors'
    GradingResult:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - needs_auto_grading
          - needs_manual_grading
          - completed
        autograde_score:
          type: number
          format: float
        total_score:
          type: number
          format: float
      example:
        total_score: 1.4658129
        id: 0
        autograde_score: 6.0274563
        status: needs_auto_grading
    ManualGradingContent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        feedback_cells:
          type: array
          items:
            $ref: '#/components/schemas/ManualGradingContent_feedback_cells'
      example:
        feedback_cells:
        - feedback: feedback
          cell_id: 0
        - feedback: feedback
          cell_id: 0
        id: 0
    AssignmentFile:
      type: object
      properties:
        name:
          type: string
          example: dataset.csv
      example:
        name: dataset.csv
    ErrorMessage:
      type: object
      properties:
        msg:
          type: string
          example: Some very detailed error message.
    inline_response_200:
      type: object
      properties:
        assignment:
          $ref: '#/components/schemas/Assignment'
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/Submission'
      example:
        assignment:
          path: ~/assignment_1/
          exercises:
          - a_id: 1
            name: exercise_1.ipynb
            ex_type: nbgrader
            id: 6
            points: 5.962134
          - a_id: 1
            name: exercise_1.ipynb
            ex_type: nbgrader
            id: 6
            points: 5.962134
          name: assignment_1
          due_date: 2021-07-21T23:55:00Z
          files:
          - name: dataset.csv
          - name: dataset.csv
          id: 0
          status: created
        submissions:
        - submitted_at: 2021-07-21T11:53:07Z
          id: 0
          status: not_graded
        - submitted_at: 2021-07-21T11:53:07Z
          id: 0
          status: not_graded
    inline_response_200_1:
      type: object
      properties:
        n_submissions:
          type: integer
          format: int64
          example: 42
        data:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_1_data'
      example:
        data:
        - student:
            name: Baz Bar
            id: "12345678"
          submissions:
          - grading_result:
              total_score: 1.4658129
              id: 0
              autograde_score: 6.0274563
              status: needs_auto_grading
            submission:
              submitted_at: 2021-07-21T11:53:07Z
              id: 0
              status: not_graded
          - grading_result:
              total_score: 1.4658129
              id: 0
              autograde_score: 6.0274563
              status: needs_auto_grading
            submission:
              submitted_at: 2021-07-21T11:53:07Z
              id: 0
              status: not_graded
        - student:
            name: Baz Bar
            id: "12345678"
          submissions:
          - grading_result:
              total_score: 1.4658129
              id: 0
              autograde_score: 6.0274563
              status: needs_auto_grading
            submission:
              submitted_at: 2021-07-21T11:53:07Z
              id: 0
              status: not_graded
          - grading_result:
              total_score: 1.4658129
              id: 0
              autograde_score: 6.0274563
              status: needs_auto_grading
            submission:
              submitted_at: 2021-07-21T11:53:07Z
              id: 0
              status: not_graded
        n_submissions: 42
    ValidationResult_validation_errors:
      type: object
      properties:
        error_line:
          type: string
          example: assert(id(2)==2)
        error_output:
          type: string
          example: NotImplementedError at line ...
    ManualGradingContent_feedback_cells:
      type: object
      properties:
        cell_id:
          type: integer
          format: int64
          example: 0
        feedback:
          type: string
      example:
        feedback: feedback
        cell_id: 0
    inline_response_200_1_submissions:
      type: object
      properties:
        submission:
          $ref: '#/components/schemas/Submission'
        grading_result:
          $ref: '#/components/schemas/GradingResult'
      example:
        grading_result:
          total_score: 1.4658129
          id: 0
          autograde_score: 6.0274563
          status: needs_auto_grading
        submission:
          submitted_at: 2021-07-21T11:53:07Z
          id: 0
          status: not_graded
    inline_response_200_1_data:
      type: object
      properties:
        student:
          $ref: '#/components/schemas/User'
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_1_submissions'
      example:
        student:
          name: Baz Bar
          id: "12345678"
        submissions:
        - grading_result:
            total_score: 1.4658129
            id: 0
            autograde_score: 6.0274563
            status: needs_auto_grading
          submission:
            submitted_at: 2021-07-21T11:53:07Z
            id: 0
            status: not_graded
        - grading_result:
            total_score: 1.4658129
            id: 0
            autograde_score: 6.0274563
            status: needs_auto_grading
          submission:
            submitted_at: 2021-07-21T11:53:07Z
            id: 0
            status: not_graded
  securitySchemes:
    hub_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://auth.hub.something.tuwien.ac.at
          scopes:
            instructor: instructor of a lecture
            tutuor: tutor of a lecture
            student: student of a lecture
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_hub_auth
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_hub_auth
    api_key:
      type: apiKey
      name: api_key
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_api_key

