## Model generation:
#  
# Typescript:
# java -jar ../openapi-generator-cli.jar generate -i documentation/openapi/schemas.yml -g typescript-angular -o grading_labextension/src --global-property models
#
# Python (service):
# java -Dmodels -DsupportingFiles=util.py,base_model_.py,typing_utils.py -jar ../openapi-generator-cli.jar generate -i documentation/openapi/schemas.yml -g python-flask -o service/ --additional-properties=packageName='api' ; rm -r service/api/test service/api/controllers service/api/openapi
# 
# Python (labextension)
# java -Dmodels -DsupportingFiles=util.py,base_model_.py,typing_utils.py -jar ../openapi-generator-cli.jar generate -i documentation/openapi/schemas.yml -g python-flask -o grading_labextension/grading_labextension --additional-properties=packageName='api' ; rm -r grading_labextension/grading_labextension/api/test grading_labextension/grading_labextension/api/controllers grading_labextension/grading_labextension/api/openapi

openapi: '3.0.2'
info:
  title: Grader Extension API Schemas
  version: '0.1'

paths:
 /:
  get:
    responses:
      200:
        description: OK

###### Data type definitions
components:
  schemas:
    User:
      type: "object"
      properties:
        name:
          type: "string"
          example: "Baz Bar"
      example:
        name: "Baz Bar"
        groups: ["LVA1", "LVA2"]
    Lecture:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "Informationsvisualisierung"
        code:
          type: "string"
          example: "ivs21"
        complete:
          type: "boolean"
          default: false
        semester:
          type: "string"
          example: "SS21"
      example:
        id: 1
        name: "Informationsvisualisierung"
        code: "ivs21"
        complete: false
        semester: "SS21"
    Assignment:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          example: "assignment_1"
        type:
          type: "string"
          enum:
            - user
            - group
        due_date:
          type: "string"
          format: "date-time"
          example: "2021-07-21T23:55:00Z"
        status:
          type: string
          enum:
            - created # another state of an assignment (instructor only)
            - pushed
            - released
            - fetching
            - fetched
            - complete # final state -> final grade is calculated
        points:
          type: number
          format: float
      example:
        id: 1
        name: "assignment_1"
        type: "user"
        due_date: "2021-07-21T23:55:00Z"
        status: "released"
        points: 10.5
    Exercise:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        a_id:
          type: "integer"
          format: "int64"
        name:
          type: string
          example: "exercise_1.ipynb"
        ex_type:
          type: string
          enum:
          - nbgrader # TODO: add more exercise types
        points:
          type: number
          format: float
        hashcode:
          type: string
        path:
          type: string
      example:
        id: 0
        a_id: 1
        name: "exercise_1.ipynb"
        ex_type: "nbgrader"
        points: 0.0
        hashcode: "fabe1215697813a0b722aea9a4b20461"
        path: exercises/exercise_1.ipynb
    Submission:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        submitted_at:
          type: "string"
          format: "date-time"
          example: "2021-07-21T11:53:07Z"
        auto_status:
          type: string
          enum:
            - "not_graded"
            - "automatically_graded"
            - "grading_failed"
        manual_status:
          type: string
          enum:
            - "not_graded"
            - "manually_graded"
            - "grading_failed"
        score:
          type: number
          format: float
        commit_hash:
          type: string
        feedback_available:
          type: boolean
      example:
        id: 2
        submitted_at: "2021-07-21T11:53:07Z"
        status: "not_graded"
        score: 10.0
        commit_hash: "d2c2372811f226f61f106e5c3d42e5892fd25ee8"
    Feedback:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        submission_id:
          type: "integer"
          format: "int64"
      example:
        id: 0
        submission_id: 2
    GradingResult:
      type: "object"
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - needs_auto_grading
          - needs_manual_grading
          - completed
        autograde_score:
          type: number
          format: float
        total_score:
          type: number
          format: float
      example:
        id: 4
        status: "needs_auto_grading"
        autograde_score: 0.0
        total_score: 0.0
    ManualGradingContent:
      type: object
      properties: # TODO: use in api
        id:
          type: integer
          format: int64
        feedback_cells:
          type: array
          items:
            type: object
            properties:
              cell_id:
                type: integer
                format: int64
                example: 0
              feedback:
                type: string
      example:
        id: 0
        feedback_cells: [
          {
            cell_id: 0,
            feedback: "Very good!"
          }
        ]
    AssignmentFile:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        a_id:
          type: "integer"
          format: "int64"
        name:
          type: string
          example: "dataset.csv"
        hashcode:
          type: string
        path:
          type: string
      example:
        name: "dataset.csv"
        hashcode: "fabe1215697813a0b722aea9a4b20461"
        path: "files/dataset.csv"
    ErrorMessage:
      type: "object"
      properties:
        msg:
          type: "string"
          example: "Some very detailed error message."
      example:
        msg: "Some very detailed error message."
    UserSubmissions:
      type: "array"
      items:
        type: "object"
        properties:
          user:
            $ref: "#/components/schemas/User"
          submissions:
            type: "array"
            items:
              $ref: "#/components/schemas/Submission"
    UserFeedback:
      type: "array"
      items:
        type: "object"
        properties:
          user:
            $ref: "#/components/schemas/User"
          submissions:
            type: "array"
            items:
              $ref:  "#/components/schemas/Feedback"

